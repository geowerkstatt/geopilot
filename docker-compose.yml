services:
  stac-browser:
    image: ghcr.io/geowerkstatt/stac-browser:3.2.0
    ports:
      - 8080:8080
    environment:
      SB_catalogUrl: "https://localhost:5173/api/stac"
      SB_locale: "de-CH"
      SB_fallbackLocale: "de-CH"
      SB_supportedLocales: "de-CH"

  db:
    image: postgis/postgis
    container_name: geopilot_db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: HAPPYWALK
      POSTGRES_PASSWORD: SOMBERSPORK
      POSTGRES_DB: geopilot
    healthcheck:
      test: "pg_isready -U HAPPYWALK -d geopilot -h db"
      interval: 3s
      timeout: 1s
      retries: 20
      start_period: 25s

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 3001:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
      PGADMIN_DEFAULT_PASSWORD: BOUNCEAUTO
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - ./config/pgadmin4-servers.json:/pgadmin4/servers.json
    entrypoint:
      - /bin/sh
      - -c
      - |
        /bin/echo '*:*:geopilot:HAPPYWALK:SOMBERSPORK' > /tmp/.pgpass
        chmod 0600 /tmp/.pgpass
        /entrypoint.sh
    depends_on:
      db:
        condition: service_healthy

  interlis-check-service:
    image: ghcr.io/geowerkstatt/interlis-check-service:edge
    restart: unless-stopped
    ports:
      - 3080:8080

  geopilot:
    build:
      context: .
    restart: unless-stopped
    ports:
      - 5173:8443
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTPS_PORTS: 8443
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/cert.pem
      ASPNETCORE_Kestrel__Certificates__Default__KeyPath: /https/cert.key
      ConnectionStrings__Context: Server=db;Port=5432;Database=geopilot;User Id=HAPPYWALK;Password=SOMBERSPORK;
      ReverseProxy__Clusters__stacBrowserCluster__Destinations__stacBrowserDestination__Address: http://stac-browser:8080/
      ReverseProxy__Clusters__mapserviceCluster__Destinations__mapserviceDestination__Address: http://qgis-server/
      Auth__Authority: http://localhost:4011/realms/geopilot
      Auth__ClientAudience: geopilot-client
      Auth__ApiAudience: geopilot-api
      Auth__AuthorizationUrl: http://localhost:4011/realms/geopilot/protocol/openid-connect/auth
      Auth__UserInfoUrl: http://localhost:4011/realms/geopilot/protocol/openid-connect/userinfo
      Auth__TokenUrl: http://localhost:4011/realms/geopilot/protocol/openid-connect/token
      Auth__ApiOrigin: https://localhost:5173
      Auth__FullScope: "profile email openid geopilot.api"
      Auth__ApiServerScope: "geopilot.api"
      Validation__InterlisCheckServiceUrl: http://interlis-check-service:8080/
      PUID: 1000
      PGID: 1000
    volumes:
      - ./src/Geopilot.Api/Uploads:/uploads
      - ./src/Geopilot.Api/Persistent:/assets
      - ./src/Geopilot.Frontend/devPublic:/public
      - ./certs:/https:ro
    extra_hosts:
      - "localhost:host-gateway"
    depends_on:
      db:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      - KEYCLOAK_ADMIN=SOMBERTOTE
      - KEYCLOAK_ADMIN_PASSWORD=STRANGENIGHT
    volumes:
      - ./config/realms:/opt/keycloak/data/import
    ports:
      - "4011:8080"
    command: start-dev --import-realm

  qgis-server:
    image: camptocamp/qgis-server:latest
    container_name: qgis_server
    ports:
      - "8380:80"
    volumes:
      - ./config/qgisserver:/etc/qgisserver
    environment:
      - QGIS_SERVER_LOG_LEVEL=0  # INFO (log all requests)
      - DEBUG=1                  # display env before spawning QGIS Server
      - QGIS_SERVER_LANDING_PAGE_PROJECTS_DIRECTORIES=/etc/qgisserver/validationWithID0000
      - PGSERVICEFILE=/etc/qgisserver/validationWithID0000/pg_service.conf
    restart: always
